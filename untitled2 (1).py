# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oMBdRBHj5Gnna-pJdJ56d4V-nm-uohpi
"""

import streamlit as st
import random

# --- 定義 ---
locations = [
    "上流", "中流", "下流", "河口",
    "東京湾", "太平洋", "日本海", "瀬戸内海", "相模湾",
    "オホーツク海", "東シナ海", "玄界灘", "大間", "五島列島"
]

seasons = ["春", "夏", "秋", "冬"]
weathers = ["晴れ", "雨", "曇り"]

# 魚データ（場所→季節→天気→魚リスト）
fish_data = {
    "上流": {
        "春": {"晴れ": ["イワナ"], "雨": ["ヤマメ"], "曇り": ["ニジマス"]},
        "夏": {"晴れ": ["アマゴ"], "雨": ["イワナ"], "曇り": ["ヤマメ"]},
        "秋": {"晴れ": ["ヤマメ"], "雨": ["ニジマス"], "曇り": ["アマゴ"]},
        "冬": {"晴れ": ["イワナ"], "雨": ["ニジマス"], "曇り": ["ヤマメ"]},
    },
    # 他の場所も同様に続く（ここでは省略）
}

# 魚情報
fish_info = {
    "イワナ": {
        "img": "https://upload.wikimedia.org/wikipedia/commons/6/66/Iwana01.jpg",
        "desc": "冷たい清流に住むイワナ。美しい体色が特徴です。"
    },
    "ヤマメ": {
        "img": "https://upload.wikimedia.org/wikipedia/commons/e/e9/Yamame_fish.jpg",
        "desc": "渓流釣りで人気のヤマメ。サケ科の淡水魚です。"
    },
    "ニジマス": {
        "img": "https://upload.wikimedia.org/wikipedia/commons/8/8a/Rainbow_trout.png",
        "desc": "派手な虹色模様をもつ美しい魚。養殖も盛ん。"
    },
    "アマゴ": {
        "img": "https://upload.wikimedia.org/wikipedia/commons/8/8d/Amago_fish_2.jpg",
        "desc": "アマゴは関西地方に多い渓流魚。赤い斑点が特徴。"
    }
    # 他の魚も必要に応じて追加
}

# --- 関数 ---
def show_fish_info(fish_name):
    info = fish_info.get(fish_name)
    if info:
        st.image(info["img"], width=200)
        st.write(fish_name)
        st.caption(info["desc"])
    else:
        st.write(fish_name)
        st.caption("情報はありません。")

# --- Streamlit UI ---
st.title("釣りゲーム")

col1, col2, col3 = st.columns(3)

with col1:
    location = st.selectbox("場所を選択", locations)
with col2:
    season = st.selectbox("季節を選択", seasons)
with col3:
    weather = st.selectbox("天気を選択", weathers)

if st.button("釣りをする"):
    fishes = fish_data.get(location, {}).get(season, {}).get(weather, [])
    if not fishes:
        st.warning("この条件では魚が釣れません。")
    else:
        caught = random.choice(fishes)
        st.success(f"釣れた魚：{caught}")
        show_fish_info(caught)

if st.checkbox("魚の図鑑を見る"):
    st.header("魚の図鑑")
    for fish in fish_info:
        show_fish_info(fish)
        st.markdown("---")